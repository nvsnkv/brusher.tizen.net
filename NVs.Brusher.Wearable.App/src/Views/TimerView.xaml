<?xml version="1.0" encoding="utf-8" ?>
<c:CirclePage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:c="clr-namespace:Tizen.Wearable.CircularUI.Forms;assembly=Tizen.Wearable.CircularUI.Forms"
             xmlns:converters="clr-namespace:NVs.Brusher.Wearable.App.Converters"
             xmlns:core="clr-namespace:NVs.Brusher.Wearable.Core;assembly=NVs.Brusher.Wearable.Core"
             x:Class="NVs.Brusher.Wearable.App.Views.TimerView">
    <c:CirclePage.Resources>
        <ResourceDictionary>
            <converters:TimerStateToObjectConverter x:TypeArguments="x:Boolean"
                                                    TrueObject="True"
                                                    FalseObject="False"
                                                    x:Key="StateToBool"/>
            <converters:TimerStateToObjectConverter x:TypeArguments="x:Boolean"
                                                    TrueObject="False"
                                                    FalseObject="True"
                                                    x:Key="InverseStateToBool"/>
            <converters:TimerStateToObjectConverter x:TypeArguments="Color"
                                                    TrueObject="White"
                                                    FalseObject="LightGray"
                                                    x:Key="StateToCountdownColor"/>
            <converters:TimerStateToObjectConverter x:TypeArguments="Color"
                                                    TrueObject="Aqua"
                                                    FalseObject="#FF00AAAA"
                                                    x:Key="StateToProgressColor"/>

        </ResourceDictionary>
    </c:CirclePage.Resources>
    <c:CirclePage.Content>
        <AbsoluteLayout>
            <Image AbsoluteLayout.LayoutFlags="None" AbsoluteLayout.LayoutBounds="30, 30, 300, 300"
                Source="toothbrush-300.png" IsVisible="{Binding State, Converter={StaticResource StateToBool}, ConverterParameter=core:TimerState.Stopped}"
                />
            <Label AbsoluteLayout.LayoutFlags="None" AbsoluteLayout.LayoutBounds="0,130,360,100"
                   FontSize="100" HorizontalTextAlignment="Center"
                   IsVisible="{Binding State, Converter={StaticResource InverseStateToBool}, ConverterParameter=core:TimerState.Stopped}"
                   Text="{Binding RemainingTicks}"
                   TextColor="{Binding State, Converter={StaticResource StateToCountdownColor}, ConverterParameter=core:TimerState.Running}"
                   />
        </AbsoluteLayout>
    </c:CirclePage.Content>
    <c:CirclePage.ActionButton>
        <c:ActionButtonItem Text="{Binding ToggleState.Title}" Command="{Binding ToggleState}" />
    </c:CirclePage.ActionButton>
    <c:CirclePage.CircleSurfaceItems>
        <c:CircleProgressBarSurfaceItem Value="{Binding Progress}" 
                                        IsVisible="{Binding State, Converter={StaticResource InverseStateToBool}, ConverterParameter=core:TimerState.Stopped}"
                                        BarColor="{Binding State, Converter={StaticResource StateToProgressColor}, ConverterParameter=core:TimerState.Running}"
                                        />
    </c:CirclePage.CircleSurfaceItems>
</c:CirclePage>
